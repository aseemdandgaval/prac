import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf

import keras
from keras.datasets import fashion_mnist
from keras.models import Sequential
from keras.utils import np_utils
from keras.layers import Dense, Activation, Dropout, Conv2D, MaxPooling2D, Flatten


(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()
print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)


X_train = X_train.reshape((X_train.shape[0], 28, 28, 1))
X_test = X_test.reshape((X_test.shape[0], 28, 28, 1))

X_train = X_train/255
X_test =X_test/255

plt.imshow(X_train[2])
print(y_train[2])

y_train = np_utils.to_categorical(y_train,10) 
y_test = np_utils.to_categorical(y_test,10)

y_train[0]



classifier = Sequential()

classifier.add(Conv2D(filters=32, kernel_size=(3,3), strides=(1,1), activation='relu', input_shape=(28,28,1)))
classifier.add(MaxPooling2D(pool_size=(2,2)))
classifier.add(Conv2D(filters=64, kernel_size=(3,3), strides=(1,1), activation='relu'))
classifier.add(MaxPooling2D(pool_size=(2,2)))
classifier.add(Flatten())
classifier.add(Dense(128, activation='relu'))
classifier.add(Dropout(rate=0.2))
classifier.add(Dense(10, activation='softmax'))

classifier.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

classifier.summary()

history = classifier.fit(X_train, y_train,
                        batch_size=128,
                        epochs=20,
                        verbose=2,
                        validation_data=(X_test, y_test))


test_img = X_train[100]
actual_pred = np.argmax(y_train[100])

pred = np.argmax(classifier.predict(test_img.reshape(1,28,28,1)/255))
print("Actual Prediction: ", actual_pred)
print("Model Prediction: ", pred)

plt.imshow(test_img)